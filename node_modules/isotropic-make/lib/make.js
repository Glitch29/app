'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _setPrototypeOf = require('babel-runtime/core-js/reflect/set-prototype-of');

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _apply = require('babel-runtime/core-js/reflect/apply');

var _apply2 = _interopRequireDefault(_apply);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _isotropicCreate = require('isotropic-create');

var _isotropicCreate2 = _interopRequireDefault(_isotropicCreate);

var _isotropicMixin = require('isotropic-mixin');

var _isotropicMixin2 = _interopRequireDefault(_isotropicMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (superConstructorFunction, mixinConstructorFunctions, prototypeObject, staticObject, initFunction, staticInitFunction, staticInitFunctionArgs) {
    if (typeof superConstructorFunction !== 'function') {
        staticInitFunctionArgs = staticInitFunction;
        staticInitFunction = initFunction;
        initFunction = staticObject;
        staticObject = prototypeObject;
        prototypeObject = mixinConstructorFunctions;
        mixinConstructorFunctions = superConstructorFunction;
        superConstructorFunction = Object;
    }

    if (!Array.isArray(mixinConstructorFunctions)) {
        staticInitFunctionArgs = staticInitFunction;
        staticInitFunction = initFunction;
        initFunction = staticObject;
        staticObject = prototypeObject;
        prototypeObject = mixinConstructorFunctions;
        mixinConstructorFunctions = null;
    }

    if ((typeof staticObject === 'undefined' ? 'undefined' : (0, _typeof3.default)(staticObject)) !== 'object') {
        staticInitFunctionArgs = staticInitFunction;
        staticInitFunction = initFunction;
        initFunction = staticObject;
        staticObject = null;
    }

    if (Array.isArray(initFunction)) {
        staticInitFunctionArgs = initFunction;
        staticInitFunction = '_init';
        initFunction = '_init';
    } else {
        initFunction = initFunction || '_init';

        if (Array.isArray(staticInitFunction)) {
            staticInitFunctionArgs = staticInitFunction;
            staticInitFunction = '_init';
        } else {
            staticInitFunction = staticInitFunction || '_init';
        }
    }

    if (typeof initFunction === 'string') {
        initFunction = prototypeObject[initFunction];
    }

    /* eslint-disable no-use-before-define */
    var constructorFunction = typeof initFunction === 'function' ? function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return (0, _apply2.default)(initFunction, (0, _isotropicCreate2.default)(constructorFunction, inheritedPrototypeObject), args);
    } : function () {
        return (0, _isotropicCreate2.default)(constructorFunction, inheritedPrototypeObject);
    },
        superPrototypeObject = superConstructorFunction.prototype,
        inheritedPrototypeObject = (0, _isotropicCreate2.default)(constructorFunction, superPrototypeObject);
    /* eslint-enable no-use-before-define */

    if (mixinConstructorFunctions) {
        (function () {
            var staticMixinObject = {};

            mixinConstructorFunctions.forEach(function (mixinConstructorFunction) {
                (0, _isotropicMixin2.default)(mixinConstructorFunction, staticMixinObject);
                (0, _isotropicMixin2.default)(mixinConstructorFunction.prototype, inheritedPrototypeObject);
            });

            if (staticObject) {
                (0, _isotropicMixin2.default)(staticObject, staticMixinObject);
            }

            staticObject = staticMixinObject;
        })();
    }

    (0, _isotropicMixin2.default)(prototypeObject, inheritedPrototypeObject);

    if (staticObject) {
        (0, _isotropicMixin2.default)(staticObject, constructorFunction);
    }

    constructorFunction.mixins = mixinConstructorFunctions;
    constructorFunction.prototype = inheritedPrototypeObject;
    constructorFunction.super_ = superConstructorFunction;
    constructorFunction.superclass = superPrototypeObject;

    (0, _setPrototypeOf2.default)(constructorFunction, superConstructorFunction);

    if (typeof staticInitFunction === 'string') {
        staticInitFunction = constructorFunction[staticInitFunction];
    }

    if (typeof staticInitFunction === 'function') {
        return (0, _apply2.default)(staticInitFunction, constructorFunction, Array.isArray(staticInitFunctionArgs) ? staticInitFunctionArgs : []);
    }

    return constructorFunction;
};
//# sourceMappingURL=data:application/json;base64,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LE9BQU8sa0JBQVAsS0FBOEIsUUFBbEMsRUFBNEM7QUFDeEMsNkJBQXFCLG9CQUFvQixrQkFBcEIsQ0FBckI7QUFDSDs7QUFFRCxRQUFJLE9BQU8sa0JBQVAsS0FBOEIsVUFBbEMsRUFBOEM7QUFDMUMsZUFBTyxxQkFBYyxrQkFBZCxFQUFrQyxtQkFBbEMsRUFBdUQsTUFBTSxPQUFOLENBQWMsc0JBQWQsSUFBd0Msc0JBQXhDLEdBQWlFLEVBQXhILENBQVA7QUFDSDs7QUFFRCxXQUFPLG1CQUFQO0FBQ0gsQyIsImZpbGUiOiJtYWtlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9jcmVhdGUgZnJvbSAnaXNvdHJvcGljLWNyZWF0ZSc7XG5cbmltcG9ydCBfbWl4aW4gZnJvbSAnaXNvdHJvcGljLW1peGluJztcblxuZXhwb3J0IGRlZmF1bHQgKHN1cGVyQ29uc3RydWN0b3JGdW5jdGlvbiwgbWl4aW5Db25zdHJ1Y3RvckZ1bmN0aW9ucywgcHJvdG90eXBlT2JqZWN0LCBzdGF0aWNPYmplY3QsIGluaXRGdW5jdGlvbiwgc3RhdGljSW5pdEZ1bmN0aW9uLCBzdGF0aWNJbml0RnVuY3Rpb25BcmdzKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzdXBlckNvbnN0cnVjdG9yRnVuY3Rpb24gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uQXJncyA9IHN0YXRpY0luaXRGdW5jdGlvbjtcbiAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uID0gaW5pdEZ1bmN0aW9uO1xuICAgICAgICBpbml0RnVuY3Rpb24gPSBzdGF0aWNPYmplY3Q7XG4gICAgICAgIHN0YXRpY09iamVjdCA9IHByb3RvdHlwZU9iamVjdDtcbiAgICAgICAgcHJvdG90eXBlT2JqZWN0ID0gbWl4aW5Db25zdHJ1Y3RvckZ1bmN0aW9ucztcbiAgICAgICAgbWl4aW5Db25zdHJ1Y3RvckZ1bmN0aW9ucyA9IHN1cGVyQ29uc3RydWN0b3JGdW5jdGlvbjtcbiAgICAgICAgc3VwZXJDb25zdHJ1Y3RvckZ1bmN0aW9uID0gT2JqZWN0O1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheShtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb25zKSkge1xuICAgICAgICBzdGF0aWNJbml0RnVuY3Rpb25BcmdzID0gc3RhdGljSW5pdEZ1bmN0aW9uO1xuICAgICAgICBzdGF0aWNJbml0RnVuY3Rpb24gPSBpbml0RnVuY3Rpb247XG4gICAgICAgIGluaXRGdW5jdGlvbiA9IHN0YXRpY09iamVjdDtcbiAgICAgICAgc3RhdGljT2JqZWN0ID0gcHJvdG90eXBlT2JqZWN0O1xuICAgICAgICBwcm90b3R5cGVPYmplY3QgPSBtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb25zO1xuICAgICAgICBtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb25zID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHN0YXRpY09iamVjdCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uQXJncyA9IHN0YXRpY0luaXRGdW5jdGlvbjtcbiAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uID0gaW5pdEZ1bmN0aW9uO1xuICAgICAgICBpbml0RnVuY3Rpb24gPSBzdGF0aWNPYmplY3Q7XG4gICAgICAgIHN0YXRpY09iamVjdCA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaW5pdEZ1bmN0aW9uKSkge1xuICAgICAgICBzdGF0aWNJbml0RnVuY3Rpb25BcmdzID0gaW5pdEZ1bmN0aW9uO1xuICAgICAgICBzdGF0aWNJbml0RnVuY3Rpb24gPSAnX2luaXQnO1xuICAgICAgICBpbml0RnVuY3Rpb24gPSAnX2luaXQnO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGluaXRGdW5jdGlvbiA9IGluaXRGdW5jdGlvbiB8fCAnX2luaXQnO1xuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0YXRpY0luaXRGdW5jdGlvbikpIHtcbiAgICAgICAgICAgIHN0YXRpY0luaXRGdW5jdGlvbkFyZ3MgPSBzdGF0aWNJbml0RnVuY3Rpb247XG4gICAgICAgICAgICBzdGF0aWNJbml0RnVuY3Rpb24gPSAnX2luaXQnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uID0gc3RhdGljSW5pdEZ1bmN0aW9uIHx8ICdfaW5pdCc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGluaXRGdW5jdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaW5pdEZ1bmN0aW9uID0gcHJvdG90eXBlT2JqZWN0W2luaXRGdW5jdGlvbl07XG4gICAgfVxuXG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9cbiAgICBjb25zdCBjb25zdHJ1Y3RvckZ1bmN0aW9uID0gdHlwZW9mIGluaXRGdW5jdGlvbiA9PT0gJ2Z1bmN0aW9uJyA/IGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gUmVmbGVjdC5hcHBseShpbml0RnVuY3Rpb24sIF9jcmVhdGUoY29uc3RydWN0b3JGdW5jdGlvbiwgaW5oZXJpdGVkUHJvdG90eXBlT2JqZWN0KSwgYXJncyk7XG4gICAgICAgIH0gOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX2NyZWF0ZShjb25zdHJ1Y3RvckZ1bmN0aW9uLCBpbmhlcml0ZWRQcm90b3R5cGVPYmplY3QpO1xuICAgICAgICB9LFxuICAgICAgICBzdXBlclByb3RvdHlwZU9iamVjdCA9IHN1cGVyQ29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUsXG5cbiAgICAgICAgaW5oZXJpdGVkUHJvdG90eXBlT2JqZWN0ID0gX2NyZWF0ZShjb25zdHJ1Y3RvckZ1bmN0aW9uLCBzdXBlclByb3RvdHlwZU9iamVjdCk7XG4gICAgLyogZXNsaW50LWVuYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSAqL1xuXG4gICAgaWYgKG1peGluQ29uc3RydWN0b3JGdW5jdGlvbnMpIHtcbiAgICAgICAgY29uc3Qgc3RhdGljTWl4aW5PYmplY3QgPSB7fTtcblxuICAgICAgICBtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb25zLmZvckVhY2gobWl4aW5Db25zdHJ1Y3RvckZ1bmN0aW9uID0+IHtcbiAgICAgICAgICAgIF9taXhpbihtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb24sIHN0YXRpY01peGluT2JqZWN0KTtcbiAgICAgICAgICAgIF9taXhpbihtaXhpbkNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLCBpbmhlcml0ZWRQcm90b3R5cGVPYmplY3QpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoc3RhdGljT2JqZWN0KSB7XG4gICAgICAgICAgICBfbWl4aW4oc3RhdGljT2JqZWN0LCBzdGF0aWNNaXhpbk9iamVjdCk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0aWNPYmplY3QgPSBzdGF0aWNNaXhpbk9iamVjdDtcbiAgICB9XG5cbiAgICBfbWl4aW4ocHJvdG90eXBlT2JqZWN0LCBpbmhlcml0ZWRQcm90b3R5cGVPYmplY3QpO1xuXG4gICAgaWYgKHN0YXRpY09iamVjdCkge1xuICAgICAgICBfbWl4aW4oc3RhdGljT2JqZWN0LCBjb25zdHJ1Y3RvckZ1bmN0aW9uKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvckZ1bmN0aW9uLm1peGlucyA9IG1peGluQ29uc3RydWN0b3JGdW5jdGlvbnM7XG4gICAgY29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBpbmhlcml0ZWRQcm90b3R5cGVPYmplY3Q7XG4gICAgY29uc3RydWN0b3JGdW5jdGlvbi5zdXBlcl8gPSBzdXBlckNvbnN0cnVjdG9yRnVuY3Rpb247XG4gICAgY29uc3RydWN0b3JGdW5jdGlvbi5zdXBlcmNsYXNzID0gc3VwZXJQcm90b3R5cGVPYmplY3Q7XG5cbiAgICBSZWZsZWN0LnNldFByb3RvdHlwZU9mKGNvbnN0cnVjdG9yRnVuY3Rpb24sIHN1cGVyQ29uc3RydWN0b3JGdW5jdGlvbik7XG5cbiAgICBpZiAodHlwZW9mIHN0YXRpY0luaXRGdW5jdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc3RhdGljSW5pdEZ1bmN0aW9uID0gY29uc3RydWN0b3JGdW5jdGlvbltzdGF0aWNJbml0RnVuY3Rpb25dO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygc3RhdGljSW5pdEZ1bmN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmFwcGx5KHN0YXRpY0luaXRGdW5jdGlvbiwgY29uc3RydWN0b3JGdW5jdGlvbiwgQXJyYXkuaXNBcnJheShzdGF0aWNJbml0RnVuY3Rpb25BcmdzKSA/IHN0YXRpY0luaXRGdW5jdGlvbkFyZ3MgOiBbXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnN0cnVjdG9yRnVuY3Rpb247XG59O1xuIl19